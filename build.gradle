buildscript {
    repositories {
    	jcenter()
        maven { url = 'http://files.minecraftforge.net/maven' }
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "${mod_version}"
group = "${mod_group}"
archivesBaseName = "${mod_id}-forge-${minecraft_version}"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${forge_version}"
    runDir = 'run'
    mappings = "${mcp_version}"
    
    def args = [
            '-Dfml.coreMods.load=com.ultimateboomer.smoothboot.core.SmoothBootCoremod',
            '-Dmixin.hotSwap=true',
            '-Dmixin.checks.interfaces=true'
    ]
    clientJvmArgs.addAll(args)
    serverJvmArgs.addAll(args)
}

repositories {
    maven { url = 'https://dist.creeper.host/Sponge/maven' }
}

configurations {
    embed
    compile.extendsFrom embed
}

dependencies {
    embed('org.spongepowered:mixin:0.8') {
        transitive = false
    }
}

jar {
    from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
        exclude 'LICENSE.txt', 'META-INF/MANIFSET.MF', 'META-INF/maven/**', 'META-INF/*.RSA', 'META-INF/*.SF'
    }

    manifest.attributes(
            'FMLCorePluginContainsFMLMod': true,
            'ForceLoadAsMod': true,
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'smoothboot.mixins.json',
            'FMLCorePlugin': 'com.ultimateboomer.smoothboot.core.SmoothBootCoremod'
    )
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
//jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    
    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
	add sourceSets.main, "smoothboot.refmap.json"
}
